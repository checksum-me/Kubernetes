//Four types of shell
// Bourne shell (sh shell)
// C shell (csh or tcsh )
// Z shell (zsh )
// Bourne again shell (bash )


//prints the shell being used 
// something like - /bin/bash
// $SHELL is an environment variable
echo $SHELL

//print to screen
echo Hi

//list files and folders 
ls 

//change directory
cd <dirname>

//preset working directory
pwd

//make/create directory
mkdir
//to make directory in one shot
mkdir -p /tmp/asia/india/bangalore


//chain commands with semi colon ;
cd new_directory; mkdir www; pwd

//Remove directory and all of its contents
rm -r /tmp/my_dir1
//Remove or delete a file
rm new_file.txt

//Copy directory and its contents from one location to another
cp -r my_dir1 /tmp/my_dir1
//Copy a file as below
cp new_file.txt copy_file.txt

//TO move a file use the below commands
//If the file is moved to the same path with different name, its like renaming the file
mv new_file.txt <new_path/filename>

//Create new file with no content
touch new_file.txt

//Add data as below and press Ctrl+D when done
cat > new_file.txt

//to view the contents
cat new_file.txt

//which user I am 
whoami

//more information of the user
id 

//to switch user ,  e.g. -> su aparna, it will as for aparna user password
su <username> 

//ssh using a particular user (aparna) into the host (192.168.1.2)
ssh aparna@192.168.1.2

//add them into the /etc/sudoers to grant them root user access
//they can type sudo in front of the commands that requires elevated privileges

sudo ls /root
//sometimes if you get permission denied error, then use the sudo command if you have root access

//Download files
curl http://www.some-site.com/some-file.txt -O 

//-O option is added to the curl to save the result to the file
wget http://www.some-site.com/some-file.txt -O some-file.txt

//Check OS version
ls /etc/*release* 
cat /etc/*release*

//Package Managers
//RPM - Red hat Package Manager
//RPM requires us to point the exact location where the package is available 
//It does not care about the dependencies a package may have

rpm -i telnet.rpm //install a Package
rpm -e telnet.rpm //uninstall a Package
rpm -q telnet.rpm //query a package 
rpm -qa //lists all installed packages

//YUM 
//high level package Manager
//Helps with dependencies , uses RPM underneath

yum install ansible //installs ansible and all of its dependencies

//Repos
//Information about the repos is stored in /etc/yum.repos.d 

//gives the list of repositories 
yum repolist 

//shows where the repos are configured in each .repo file 
ls /etc/yum.repos.d 

//gives list of installed pacakge 
yum list <packagename> 

//example
yum list ansible 

//Uninstall a package
yum remove ansible

//To show available packages to install 
yum --showduplicates list ansible 

//To install specific version , specify the version from the above available list 
yum install ansible-2.4.2.0


//Services

//start a Service
service httpd start

//newer method to start service
systemctl start httpd

//service command uses the systemctl command underneath

//Stop a service
systemctl stop httpd

//Check the status of a service
systemctl status httpd

//Configure the service to start up at the startup
systemctl enable httpd

//Configure the service to stop at the startup
systemctl disable httpd

//systemctl can be configured using the systemd unit files
//these files are located at /etc/systemd/system
//file must be named in the name of the service and with extension of '.service'
//example my_app.service

my_app.service
    [Unit]
    Description=My Python Web application

    [Service]
    ExecStart=/usr/bin/python3 /opt/code/my_app.py 
    ExecStartPre=/opt/code/configure_db.sh
    ExecStartPost=/opt/code/email_status.sh
    Restart=always  

    [Install]
    WantedBy=multi-user.target

//To let systemd know a new service has been added 
systemctl daemon-reload

//Start the custom service created 
systemctl start my_app

//To start at bootup , added the Install as above in service file to use run level in WantedBy
//then run the below command
systemctl enable my_app

//Docker service file is located at /lib/systemd/system/docker.service

